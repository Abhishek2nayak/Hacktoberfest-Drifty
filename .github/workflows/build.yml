# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Package Drifty

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - "Website/**"
      - "*.md"
      - "*.txt"
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - "Website/**"      
      - "*.md"
      - "*.txt"
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  package-Drifty:
    strategy:
      matrix:
        os: ["windows-latest", "macos-13", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up GraalVM JDK 20.0.1
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '20.0.1'
        distribution: 'graalvm-community'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        set-java-home: true
        native-image-job-reports: 'true'
        cache: 'maven'
        native-image-pr-reports: true
        components: 'native-image'
    - name: Package Drifty CLI for ${{ matrix.os }} with GraalVM
      run: mvn -Pbuild-drifty-cli-for-${{ matrix.os }} package
    - name: Set Up Maven version 3.8.8 # For GUI build issues, maven version 3.8.8 needs to be used
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.8
    - name: Package Drifty GUI for ${{ matrix.os }} with GluonFX maven plugin
      run: mvn -Pbuild-drifty-gui gluonfx:build@${{ matrix.os }}
    - name: List files in target directory
      run: tree target/
    - name: Tar build files # To prevent file permission loss
      run: tar -cvf ${{ matrix.os }}.tar target
    - name: Push generated artifacts for ${{ matrix.os }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-Build-Files
        path: target.tar
        
  list-Drifty-artifacts:
    runs-on: ubuntu-latest
    needs: package-Drifty
    steps:
    - uses: actions/checkout@v3
    - name: Get Drifty version from version.json file
      run: echo "VERSION=$(jq .version version.json | sed -r 's/"//g')" >> $GITHUB_ENV
    - name: Set Drifty version in pom.xml
      run: mvn versions:set -DnewVersion=$VERSION
    - name: Download Build artifacts
      uses: actions/download-artifact@v3
    - name: List all present files
      run: ls
    # - name: Create Release ($VERSION) with automated release notes
      # run: gh release create v$VERSION --generate-notes '/path/to/asset.extension#Asset-Display-string' # Assets path to be added later
